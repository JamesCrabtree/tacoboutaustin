{
	"info": {
		"name": "tacoboutaustin api tests",
		"_postman_id": "ac5670a2-1a74-e30b-54f2-e1b44211f45e",
		"description": "",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "restaurants",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "c0090dd1-d3ab-41ff-b728-f30309d0cb79",
						"type": "text/javascript",
						"exec": [
							"tests[\"Status code is 200\"] = responseCode.code === 200;",
							"tests[\"Returns json\"] = postman.getResponseHeader(\"Content-Type\") === \"application/json\";",
							"",
							"var resp = JSON.parse(responseBody);",
							"var schema = {",
							"    \"$schema\": \"http://json-schema.org/draft-07/schema#\",",
							"    \"type\": \"object\",",
							"    \"properties\": {",
							"        \"list\": {",
							"            \"type\": \"array\",",
							"            \"items\" : {",
							"                \"type\": \"object\",",
							"                \"properties\" : {",
							"                    \"address\": {",
							"                        \"type\": \"array\",",
							"                        \"properties\": {",
							"                            \"type\": \"string\"",
							"                        }",
							"                    },",
							"                    \"categories\": {",
							"                        \"type\": \"array\",",
							"                        \"items\": {",
							"                            \"type\": \"object\",",
							"                            \"properties\": {",
							"                                \"id\": {",
							"                                    \"type\": \"string\"",
							"                                },",
							"                                \"name\": {",
							"                                    \"type\": \"string\"",
							"                                }",
							"                            }",
							"                        }",
							"                    },",
							"                    \"id\": {",
							"                        \"type\": \"integer\"",
							"                    },",
							"                    \"image\": {",
							"                        \"type\": [\"string\", \"null\"]",
							"                    },",
							"                    \"name\": {",
							"                        \"type\": \"string\"",
							"                    },",
							"                    \"rating\": {",
							"                        \"type\": \"number\"",
							"                    },",
							"                    \"zip_code\": {",
							"                        \"type\": \"number\"",
							"                    }",
							"                },",
							"                \"additionalProperties\": false,",
							"                \"required\": [\"address\", \"categories\", \"id\", \"image\", \"name\", \"rating\", \"zip_code\"]",
							"            }",
							"        }",
							"    }",
							"}",
							"",
							"tests[\"Valid schema\"] = tv4.validate(resp, schema);",
							"console.log(tv4.error)",
							"",
							"var last_id = -1;",
							"var uniqueID = true;",
							"var validRatings = true;",
							"var validImages = true;",
							"var validAddress = true;",
							"var validNames = true;",
							"var validCategories = true;",
							"for(let item of resp.list){",
							"    uniqueID = item.id > last_id && uniqueID;",
							"    last_id = item.id;",
							"    validRatings = (item.rating > 0 && item.rating % 0.5 === 0) && validRatings;",
							"    validImages = item.image !== \"\" && validImages;",
							"    validAddress = item.address.length == 2 && (item.address[0] !== \"\" && item.address[1] !== \"\") && validAddress;",
							"    validNames = (item.name !== \"\") && validNames;",
							"    validCategories = item.categories.length > 0 && validCategories; ",
							"}",
							"",
							"tests[\"ID's are unique\"] = uniqueID;",
							"tests[\"Ratings are valid\"] = validRatings;",
							"tests[\"All instances have frontpage images\"] = validImages;",
							"tests[\"Addresses are not NULL\"] = validAddress;",
							"tests[\"Names are not NULL\"] = validNames;",
							"tests[\"All instances have >= 1 category\"] = validCategories",
							""
						]
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"body": {},
				"url": {
					"raw": "http://api.tacoboutaustin.me/restaurants",
					"protocol": "http",
					"host": [
						"api",
						"tacoboutaustin",
						"me"
					],
					"path": [
						"restaurants"
					]
				},
				"description": ""
			},
			"response": []
		},
		{
			"name": "restaraunt pagination & filter",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "da51336b-09b2-4fe2-a26c-3a42da7eefb6",
						"type": "text/javascript",
						"exec": [
							"tests[\"Status code is 200\"] = responseCode.code === 200;",
							"tests[\"Returns json\"] = postman.getResponseHeader(\"Content-Type\") === \"application/json\";",
							"",
							"var resp = JSON.parse(responseBody);",
							"",
							"tests[\"return 12 items\"] = resp.total <= 12",
							"",
							"var matchesFilter = true;",
							"for(let item of resp.list){",
							"    var hasCategory = false;",
							"    for(let cat of item.categories)",
							"        hasCategory = cat.id == \"mexican\" || hasCategory;",
							"    matchesFilter = item.rating >= 4 && item.zip_code == 78704 && hasCategory && matchesFilter",
							"}",
							"",
							"tests[\"Response matches filter\"] = matchesFilter"
						]
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"body": {},
				"url": {
					"raw": "http://api.tacoboutaustin.me/restaurants?page=1&rating=4&zipcode=78704&categories=mexican",
					"protocol": "http",
					"host": [
						"api",
						"tacoboutaustin",
						"me"
					],
					"path": [
						"restaurants"
					],
					"query": [
						{
							"key": "page",
							"value": "1",
							"equals": true
						},
						{
							"key": "rating",
							"value": "4",
							"equals": true
						},
						{
							"key": "zipcode",
							"value": "78704",
							"equals": true
						},
						{
							"key": "categories",
							"value": "mexican",
							"equals": true
						}
					]
				},
				"description": ""
			},
			"response": []
		},
		{
			"name": "restaraunt search or",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "0d4f3a81-4e6f-4101-9961-e508bbf96f95",
						"type": "text/javascript",
						"exec": [
							"tests[\"Status code is 200\"] = responseCode.code === 200;",
							"tests[\"Returns json\"] = postman.getResponseHeader(\"Content-Type\") === \"application/json\";",
							"",
							"var resp = JSON.parse(responseBody);",
							"",
							"var matchesFilter = true;",
							"for(let item of resp.list){",
							"    matchesFilter = (item.name.toLowerCase().includes(\"taco\") || item.zip_code == 78704) && matchesFilter",
							"}",
							"",
							"tests[\"Response matches filter\"] = matchesFilter"
						]
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"body": {},
				"url": {
					"raw": "http://api.tacoboutaustin.me/restaurants?search=taco,78704",
					"protocol": "http",
					"host": [
						"api",
						"tacoboutaustin",
						"me"
					],
					"path": [
						"restaurants"
					],
					"query": [
						{
							"key": "search",
							"value": "taco,78704",
							"equals": true
						}
					]
				},
				"description": ""
			},
			"response": []
		},
		{
			"name": "restaraunt search and",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "b1a0bd14-c5e6-4652-86db-1ff254b72291",
						"type": "text/javascript",
						"exec": [
							"tests[\"Status code is 200\"] = responseCode.code === 200;",
							"tests[\"Returns json\"] = postman.getResponseHeader(\"Content-Type\") === \"application/json\";",
							"",
							"var resp = JSON.parse(responseBody);",
							"",
							"var matchesFilter = true;",
							"for(let item of resp.list){",
							"    matchesFilter = (item.name.toLowerCase().includes(\"taco\") && item.zip_code == 78704) && matchesFilter",
							"}",
							"",
							"tests[\"Response matches filter\"] = matchesFilter"
						]
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"body": {},
				"url": {
					"raw": "http://api.tacoboutaustin.me/restaurants?search=taco,78704&search_type=and",
					"protocol": "http",
					"host": [
						"api",
						"tacoboutaustin",
						"me"
					],
					"path": [
						"restaurants"
					],
					"query": [
						{
							"key": "search",
							"value": "taco,78704",
							"equals": true
						},
						{
							"key": "search_type",
							"value": "and",
							"equals": true
						}
					]
				},
				"description": ""
			},
			"response": []
		},
		{
			"name": "hotels",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "5bb03e53-2290-4365-9f1e-666106772ad8",
						"type": "text/javascript",
						"exec": [
							"tests[\"Status code is 200\"] = responseCode.code === 200;",
							"tests[\"Returns json\"] = postman.getResponseHeader(\"Content-Type\") === \"application/json\";",
							"",
							"var resp = JSON.parse(responseBody);",
							"var schema = {",
							"    \"$schema\": \"http://json-schema.org/draft-07/schema#\",",
							"    \"type\": \"object\",",
							"    \"properties\": {",
							"        \"list\": {",
							"            \"type\": \"array\",",
							"            \"items\" : {",
							"                \"type\": \"object\",",
							"                \"properties\" : {",
							"                    \"address\": {",
							"                        \"type\": \"array\",",
							"                        \"properties\": {",
							"                            \"type\": \"string\"",
							"                        }",
							"                    },",
							"                    \"categories\": {",
							"                        \"type\": \"array\",",
							"                        \"items\": {",
							"                            \"type\": \"object\",",
							"                            \"properties\": {",
							"                                \"id\": {",
							"                                    \"type\": \"string\"",
							"                                },",
							"                                \"name\": {",
							"                                    \"type\": \"string\"",
							"                                }",
							"                            }",
							"                        }",
							"                    },",
							"                    \"id\": {",
							"                        \"type\": \"integer\"",
							"                    },",
							"                    \"image\": {",
							"                        \"type\": [\"string\", \"null\"]",
							"                    },",
							"                    \"name\": {",
							"                        \"type\": \"string\"",
							"                    },",
							"                    \"rating\": {",
							"                        \"type\": \"number\"",
							"                    },",
							"                    \"zip_code\": {",
							"                        \"type\": \"number\"",
							"                    }",
							"                },",
							"                \"additionalProperties\": false,",
							"                \"required\": [\"address\", \"categories\", \"id\", \"image\", \"name\", \"rating\", \"zip_code\"]",
							"            }",
							"        }",
							"    }",
							"}",
							"",
							"tests[\"Valid schema\"] = tv4.validate(resp, schema);",
							"console.log(tv4.error)",
							"",
							"var last_id = -1;",
							"var uniqueID = true;",
							"var validRatings = true;",
							"var validImages = true;",
							"var validAddress = true;",
							"var validNames = true;",
							"var validCategories = true;",
							"for(let item of resp.list){",
							"    uniqueID = item.id > last_id && uniqueID;",
							"    last_id = item.id;",
							"    validRatings = (item.rating > 0 && item.rating % 0.5 === 0) && validRatings;",
							"    validImages = item.image !== \"\" && validImages;",
							"    validAddress = item.address.length == 2 && (item.address[0] !== \"\" && item.address[1] !== \"\") && validAddress;",
							"    validNames = (item.name !== \"\") && validNames;",
							"    validCategories = item.categories.length > 0 && validCategories; ",
							"}",
							"",
							"tests[\"ID's are unique\"] = uniqueID;",
							"tests[\"Ratings are valid\"] = validRatings;",
							"tests[\"All instances have frontpage images\"] = validImages;",
							"tests[\"Addresses are not NULL\"] = validAddress;",
							"tests[\"Names are not NULL\"] = validNames;",
							"tests[\"All instances have >= 1 category\"] = validCategories"
						]
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"body": {},
				"url": {
					"raw": "http://api.tacoboutaustin.me/hotels",
					"protocol": "http",
					"host": [
						"api",
						"tacoboutaustin",
						"me"
					],
					"path": [
						"hotels"
					]
				},
				"description": ""
			},
			"response": []
		},
		{
			"name": "hotel pagination & filter",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "a935a604-182b-4b27-8236-066e400bfd50",
						"type": "text/javascript",
						"exec": [
							"tests[\"Status code is 200\"] = responseCode.code === 200;",
							"tests[\"Returns json\"] = postman.getResponseHeader(\"Content-Type\") === \"application/json\";",
							"",
							"var resp = JSON.parse(responseBody);",
							"",
							"tests[\"return 12 items\"] = resp.total <= 12",
							"",
							"var matchesFilter = true;",
							"for(let item of resp.list){",
							"    matchesFilter = item.rating >= 4 && item.zip_code == 78704 && matchesFilter;",
							"}",
							"",
							"tests[\"Response matches filter\"] = matchesFilter"
						]
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"body": {},
				"url": {
					"raw": "http://api.tacoboutaustin.me/hotels?page=1&rating=4&zipcode=78704",
					"protocol": "http",
					"host": [
						"api",
						"tacoboutaustin",
						"me"
					],
					"path": [
						"hotels"
					],
					"query": [
						{
							"key": "page",
							"value": "1",
							"equals": true
						},
						{
							"key": "rating",
							"value": "4",
							"equals": true
						},
						{
							"key": "zipcode",
							"value": "78704",
							"equals": true
						}
					]
				},
				"description": ""
			},
			"response": []
		},
		{
			"name": "hotel search or",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "bf22a2a5-c81f-4183-927c-64f6818978b7",
						"type": "text/javascript",
						"exec": [
							"tests[\"Status code is 200\"] = responseCode.code === 200;",
							"tests[\"Returns json\"] = postman.getResponseHeader(\"Content-Type\") === \"application/json\";",
							"",
							"var resp = JSON.parse(responseBody);",
							"",
							"var matchesFilter = true;",
							"for(let item of resp.list){",
							"    matchesFilter = (item.name.toLowerCase().includes(\"driskill\") || item.zip_code == 78704) && matchesFilter",
							"}",
							"",
							"tests[\"Response matches filter\"] = matchesFilter"
						]
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"body": {},
				"url": {
					"raw": "http://api.tacoboutaustin.me/hotels?search=driskill,78704",
					"protocol": "http",
					"host": [
						"api",
						"tacoboutaustin",
						"me"
					],
					"path": [
						"hotels"
					],
					"query": [
						{
							"key": "search",
							"value": "driskill,78704",
							"equals": true
						}
					]
				},
				"description": ""
			},
			"response": []
		},
		{
			"name": "hotels search and",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "93e5e997-d0c4-49a5-ae61-4fbc872f1dfd",
						"type": "text/javascript",
						"exec": [
							"tests[\"Status code is 200\"] = responseCode.code === 200;",
							"tests[\"Returns json\"] = postman.getResponseHeader(\"Content-Type\") === \"application/json\";",
							"",
							"var resp = JSON.parse(responseBody);",
							"",
							"var matchesFilter = true;",
							"for(let item of resp.list){",
							"    matchesFilter = (item.name.toLowerCase().includes(\"driskill\") && item.zip_code == 78701) && matchesFilter",
							"}",
							"",
							"tests[\"Response matches filter\"] = matchesFilter"
						]
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"body": {},
				"url": {
					"raw": "http://api.tacoboutaustin.me/hotels?search=driskill,78701&search_type=and",
					"protocol": "http",
					"host": [
						"api",
						"tacoboutaustin",
						"me"
					],
					"path": [
						"hotels"
					],
					"query": [
						{
							"key": "search",
							"value": "driskill,78701",
							"equals": true
						},
						{
							"key": "search_type",
							"value": "and",
							"equals": true
						}
					]
				},
				"description": ""
			},
			"response": []
		},
		{
			"name": "attractions",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "49b84bcf-9854-4e4d-94ff-78b332011ba9",
						"type": "text/javascript",
						"exec": [
							"tests[\"Status code is 200\"] = responseCode.code === 200;",
							"tests[\"Returns json\"] = postman.getResponseHeader(\"Content-Type\") === \"application/json\";",
							"",
							"var resp = JSON.parse(responseBody);",
							"var schema = {",
							"    \"$schema\": \"http://json-schema.org/draft-07/schema#\",",
							"    \"type\": \"object\",",
							"    \"properties\": {",
							"        \"list\": {",
							"            \"type\": \"array\",",
							"            \"items\" : {",
							"                \"type\": \"object\",",
							"                \"properties\" : {",
							"                    \"address\": {",
							"                        \"type\": \"array\",",
							"                        \"properties\": {",
							"                            \"type\": \"string\"",
							"                        }",
							"                    },",
							"                    \"categories\": {",
							"                        \"type\": \"array\",",
							"                        \"items\": {",
							"                            \"type\": \"object\",",
							"                            \"properties\": {",
							"                                \"id\": {",
							"                                    \"type\": \"string\"",
							"                                },",
							"                                \"name\": {",
							"                                    \"type\": \"string\"",
							"                                }",
							"                            }",
							"                        }",
							"                    },",
							"                    \"id\": {",
							"                        \"type\": \"integer\"",
							"                    },",
							"                    \"image\": {",
							"                        \"type\": [\"string\", \"null\"]",
							"                    },",
							"                    \"name\": {",
							"                        \"type\": \"string\"",
							"                    },",
							"                    \"rating\": {",
							"                        \"type\": \"number\"",
							"                    },",
							"                    \"zip_code\": {",
							"                        \"type\": \"number\"",
							"                    }",
							"                },",
							"                \"additionalProperties\": false,",
							"                \"required\": [\"address\", \"categories\", \"id\", \"image\", \"name\", \"rating\", \"zip_code\"]",
							"            }",
							"        }",
							"    }",
							"}",
							"",
							"tests[\"Valid schema\"] = tv4.validate(resp, schema);",
							"console.log(tv4.error)",
							"",
							"var last_id = -1;",
							"var uniqueID = true;",
							"var validRatings = true;",
							"var validImages = true;",
							"var validAddress = true;",
							"var validNames = true;",
							"var validCategories = true;",
							"for(let item of resp.list){",
							"    uniqueID = item.id > last_id && uniqueID;",
							"    last_id = item.id;",
							"    validRatings = (item.rating > 0 && item.rating % 0.5 === 0) && validRatings;",
							"    validImages = item.image !== \"\" && validImages;",
							"    validAddress = item.address.length == 2 && (item.address[0] !== \"\" && item.address[1] !== \"\") && validAddress;",
							"    validNames = (item.name !== \"\") && validNames;",
							"    validCategories = item.categories.length > 0 && validCategories; ",
							"}",
							"",
							"tests[\"ID's are unique\"] = uniqueID;",
							"tests[\"Ratings are valid\"] = validRatings;",
							"tests[\"All instances have frontpage images\"] = validImages;",
							"tests[\"Addresses are not NULL\"] = validAddress;",
							"tests[\"Names are not NULL\"] = validNames;",
							"//tests[\"All instances have >= 1 category\"] = validCategories"
						]
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"body": {},
				"url": {
					"raw": "http://api.tacoboutaustin.me/attractions",
					"protocol": "http",
					"host": [
						"api",
						"tacoboutaustin",
						"me"
					],
					"path": [
						"attractions"
					]
				},
				"description": ""
			},
			"response": []
		},
		{
			"name": "attraction pagination & filter",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "b1838ae8-59a6-4478-98c6-5b1d95402d29",
						"type": "text/javascript",
						"exec": [
							"tests[\"Status code is 200\"] = responseCode.code === 200;",
							"tests[\"Returns json\"] = postman.getResponseHeader(\"Content-Type\") === \"application/json\";",
							"",
							"var resp = JSON.parse(responseBody);",
							"",
							"tests[\"return 12 items\"] = resp.total <= 12",
							"",
							"var matchesFilter = true;",
							"for(let item of resp.list){",
							"    for(let cat of item.categories)",
							"        hasCategory = cat.id == \"landmarks\" || hasCategory;",
							"    matchesFilter = item.rating >= 4 && item.zip_code == 78701 && matchesFilter",
							"}",
							"",
							"tests[\"Response matches filter\"] = matchesFilter"
						]
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"body": {},
				"url": {
					"raw": "http://api.tacoboutaustin.me/attractions?page=1&rating=2&zipcode=78701&categories=landmarks",
					"protocol": "http",
					"host": [
						"api",
						"tacoboutaustin",
						"me"
					],
					"path": [
						"attractions"
					],
					"query": [
						{
							"key": "page",
							"value": "1",
							"equals": true
						},
						{
							"key": "rating",
							"value": "2",
							"equals": true
						},
						{
							"key": "zipcode",
							"value": "78701",
							"equals": true
						},
						{
							"key": "categories",
							"value": "landmarks",
							"equals": true
						}
					]
				},
				"description": ""
			},
			"response": []
		},
		{
			"name": "attraction search or",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "8fea44be-40ef-4985-bfe0-af0fe93c1b8e",
						"type": "text/javascript",
						"exec": [
							"tests[\"Status code is 200\"] = responseCode.code === 200;",
							"tests[\"Returns json\"] = postman.getResponseHeader(\"Content-Type\") === \"application/json\";",
							"",
							"var resp = JSON.parse(responseBody);",
							"",
							"var matchesFilter = true;",
							"for(let item of resp.list){",
							"    matchesFilter = (item.name.toLowerCase().includes(\"alamo\") || item.zip_code == 78704) && matchesFilter",
							"}",
							"",
							"tests[\"Response matches filter\"] = matchesFilter"
						]
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"body": {},
				"url": {
					"raw": "http://api.tacoboutaustin.me/attractions?search=alamo,78704",
					"protocol": "http",
					"host": [
						"api",
						"tacoboutaustin",
						"me"
					],
					"path": [
						"attractions"
					],
					"query": [
						{
							"key": "search",
							"value": "alamo,78704",
							"equals": true
						}
					]
				},
				"description": ""
			},
			"response": []
		},
		{
			"name": "attraction search and",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "b1e6414a-994c-4891-8bee-527ba7f707ef",
						"type": "text/javascript",
						"exec": [
							"tests[\"Status code is 200\"] = responseCode.code === 200;",
							"tests[\"Returns json\"] = postman.getResponseHeader(\"Content-Type\") === \"application/json\";",
							"",
							"var resp = JSON.parse(responseBody);",
							"",
							"var matchesFilter = true;",
							"for(let item of resp.list){",
							"    matchesFilter = (item.name.toLowerCase().includes(\"alamo\") && item.zip_code == 78704) && matchesFilter",
							"}",
							"",
							"tests[\"Response matches filter\"] = matchesFilter"
						]
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"body": {},
				"url": {
					"raw": "http://api.tacoboutaustin.me/attractions?search=alamo,78704&search_type=and",
					"protocol": "http",
					"host": [
						"api",
						"tacoboutaustin",
						"me"
					],
					"path": [
						"attractions"
					],
					"query": [
						{
							"key": "search",
							"value": "alamo,78704",
							"equals": true
						},
						{
							"key": "search_type",
							"value": "and",
							"equals": true
						}
					]
				},
				"description": ""
			},
			"response": []
		},
		{
			"name": "restaurants/<id> valid",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "1cbf03d3-07d9-4379-ab20-c4ad714ad190",
						"type": "text/javascript",
						"exec": [
							"//pm.environment.set(\"resID\", String(parseInt(pm.environment.get(\"resID\")) + 1))"
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "9ae63ef0-322f-4b0c-8a17-dacbb77183b7",
						"type": "text/javascript",
						"exec": [
							"function validate_nearby(near){",
							"    var validID = true;",
							"    var validRatings = true;",
							"    var validImages = true;",
							"    var validAddress = true;",
							"    var validNames = true;",
							"    for(let item of near){",
							"        validID = item.id >= 0 && validID;",
							"        validRatings = (item.rating > 0 && item.rating % 0.5 === 0) && validRatings;",
							"        validImages = item.image !== \"\" && validImages;",
							"        validAddress = item.address.length == 2 && (item.address[0] !== \"\" && item.address[1] !== \"\") && validAddress;",
							"        validNames = (item.name !== \"\") && validNames;",
							"    }",
							"    return validID && validImages && validRatings && validAddress && validNames;",
							"}",
							"",
							"function validate_reviews(list){",
							"    validReviews = true;",
							"    validReviews = list[0].text !== \"\" && list[0].link !== \"\" && validReviews;",
							"    validReviews = list[1].text !== \"\" && list[1].link !== \"\" && validReviews;",
							"    validReviews = list[2].text !== \"\" && list[2].link !== \"\" && validReviews;",
							"    ",
							"    return validReviews;",
							"}",
							"",
							"function validate_images(list){",
							"    validImages = true;",
							"    validImages = list[0] !== \"\" && validImages;",
							"    validImages = list[1] !== \"\" && validImages;",
							"    validImages = list[2] !== \"\" && validImages;",
							" ",
							"    return validImages;   ",
							"}",
							"",
							"tests[\"Status code is 200\"] = responseCode.code === 200;",
							"tests[\"Returns json\"] = postman.getResponseHeader(\"Content-Type\") === \"application/json\";",
							"",
							"var resp = JSON.parse(responseBody);",
							"var schema = {",
							"    \"$schema\": \"http://json-schema.org/draft-07/schema#\",",
							"    \"type\": \"object\",",
							"    \"properties\": {",
							"        \"close_by_attractions\": {",
							"            \"type\": \"array\",",
							"            \"items\" : {",
							"                \"type\": \"object\",",
							"                \"properties\" : {",
							"                    \"address\": {",
							"                        \"type\": \"array\",",
							"                        \"properties\": {",
							"                            \"type\": \"string\"",
							"                        }",
							"                    },",
							"                    \"categories\": {",
							"                        \"type\": \"array\",",
							"                        \"items\": {",
							"                            \"type\": \"object\",",
							"                            \"properties\": {",
							"                                \"id\": {",
							"                                    \"type\": \"string\"",
							"                                },",
							"                                \"name\": {",
							"                                    \"type\": \"string\"",
							"                                }",
							"                            }",
							"                        }",
							"                    },",
							"                    \"distance\": {",
							"                        \"type\": \"number\"",
							"                    },",
							"                    \"id\": {",
							"                        \"type\": \"integer\"",
							"                    },",
							"                    \"image\": {",
							"                        \"type\": \"string\"",
							"                    },",
							"                    \"name\": {",
							"                        \"type\": \"string\"",
							"                    },",
							"                    \"rating\": {",
							"                        \"type\": \"number\"",
							"                    },",
							"                    \"zip_code\": {",
							"                        \"type\": \"integer\"",
							"                    }",
							"                },",
							"                \"additionalProperties\": false,",
							"                \"required\": [\"address\", \"categories\", \"id\", \"distance\", \"image\", \"name\", \"rating\", \"zip_code\"]",
							"            }",
							"        },",
							"        \"close_by_hotels\": {",
							"            \"type\": \"array\",",
							"            \"items\" : {",
							"                \"type\": \"object\",",
							"                \"properties\" : {",
							"                    \"address\": {",
							"                        \"type\": \"array\",",
							"                        \"properties\": {",
							"                            \"type\": \"string\"",
							"                        }",
							"                    },",
							"                    \"categories\": {",
							"                        \"type\": \"array\",",
							"                        \"items\": {",
							"                            \"type\": \"object\",",
							"                            \"properties\": {",
							"                                \"id\": {",
							"                                    \"type\": \"string\"",
							"                                },",
							"                                \"name\": {",
							"                                    \"type\": \"string\"",
							"                                }",
							"                            }",
							"                        }",
							"                    },",
							"                    \"distance\": {",
							"                        \"type\": \"number\"",
							"                    },",
							"                    \"id\": {",
							"                        \"type\": \"integer\"",
							"                    },",
							"                    \"image\": {",
							"                        \"type\": \"string\"",
							"                    },",
							"                    \"name\": {",
							"                        \"type\": \"string\"",
							"                    },",
							"                    \"rating\": {",
							"                        \"type\": \"number\"",
							"                    },",
							"                    \"zip_code\": {",
							"                        \"type\": \"integer\"",
							"                    }",
							"                },",
							"                \"additionalProperties\": false,",
							"                \"required\": [\"address\", \"categories\", \"id\", \"distance\", \"image\", \"name\", \"rating\", \"zip_code\"]",
							"            }",
							"        },",
							"        \"restaurant\": {",
							"        \"type\": \"object\",",
							"            \"properties\" : {",
							"                \"address\": {",
							"                    \"type\": \"array\",",
							"                    \"properties\": {",
							"                        \"type\": \"string\"",
							"                    }",
							"                },",
							"                \"categories\": {",
							"                    \"type\": \"array\",",
							"                    \"properties\": {",
							"                        \"type\": \"object\",",
							"                        \"properties\": {",
							"                            \"id\": {",
							"                                \"type\": \"string\"",
							"                            },",
							"                            \"name\": {",
							"                                \"type\": \"string\"",
							"                            }",
							"                        }",
							"                    }",
							"                },",
							"                \"hours\": {",
							"                    \"type\": \"array\",",
							"                    \"properties\": {",
							"                        \"type\": \"object\",",
							"                        \"properties\": {",
							"                            \"close_time\": {",
							"                                \"type\": \"string\"",
							"                            },",
							"                            \"day\": {",
							"                                \"type\": \"integer\"",
							"                            },",
							"                            \"open_time\": {",
							"                                \"type\": \"string\"",
							"                            }",
							"                        }",
							"                    }",
							"                },",
							"                \"id\": {",
							"                    \"type\": \"integer\"",
							"                },",
							"                \"images\": {",
							"                    \"type\": \"array\",",
							"                    \"properties\": {",
							"                        \"type\": \"string\"",
							"                    }",
							"                },",
							"                \"location\": {",
							"                    \"type\": \"object\",",
							"                    \"properties\": {",
							"                        \"lat\": {",
							"                            \"type\": \"number\"",
							"                        },",
							"                        \"long\": {",
							"                            \"type\": \"number\"",
							"                        }",
							"                    }",
							"                },",
							"                \"name\": {",
							"                    \"type\": \"string\"",
							"                },",
							"                \"phone\": {",
							"                    \"type\": \"string\"",
							"                },",
							"                \"rating\": {",
							"                    \"type\": \"number\"",
							"                },",
							"                \"reviews\": {",
							"                    \"type\": \"array\",",
							"                    \"items\": {",
							"                        \"type\": \"object\",",
							"                        \"properties\": {",
							"                            \"link\": {",
							"                                \"type\": \"string\"",
							"                            },",
							"                            \"text\": {",
							"                                \"type\": \"string\"",
							"                            }",
							"                        }",
							"                    }",
							"                }",
							"            },",
							"            \"additionalProperties\": false,",
							"            \"required\": [\"address\", \"categories\", \"hours\", \"id\", \"images\", \"location\", \"name\", \"phone\", \"rating\", \"reviews\"]",
							"        }",
							"    }",
							"}",
							"",
							"tests[\"Valid schema\"] = tv4.validate(resp, schema);",
							"console.log(tv4.error)",
							"",
							"tests[\"4 Nearby Attractions\"] = resp.close_by_attractions.length == 4;",
							"tests[\"Attractions have valid information\"] = validate_nearby(resp.close_by_attractions);",
							"tests[\"4 Nearby Hotels\"] = resp.close_by_hotels.length == 4;",
							"tests[\"Hotels have valid information\"] = validate_nearby(resp.close_by_hotels);",
							"",
							"var item = resp.restaurant;",
							"tests[\"Address is Valid\"] = item.address.length == 2 && (item.address[0] !== \"\" && item.address[1] !== \"\");",
							"tests[\"ID is valid\"] = item.id >= 0;",
							"tests[\"Rating is valid\"] = item.rating > 0 && item.rating % 0.5 === 0;",
							"tests[\"Images are Valid\"] = validate_images(item.images);",
							"tests[\"Name is valid\"] = item.name !== \"\";",
							"tests[\"Phone Number is Valid\"] = item.phone !== \"\" && item.phone.length == 14;",
							"tests[\"Reviews are Valid\"] = item.reviews.length == 3 && validate_reviews(item.reviews);",
							"tests[\"Location is Valid\"] = item.location.lat >= -90.0 && item.location.lat <= 90.0 && item.location.long >= -180.0 && item.location.long <= 180.0; ",
							"tests[\"Hours are Valid\"] = item.hours !== \"\";"
						]
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"body": {},
				"url": {
					"raw": "http://api.tacoboutaustin.me/restaurants/1",
					"protocol": "http",
					"host": [
						"api",
						"tacoboutaustin",
						"me"
					],
					"path": [
						"restaurants",
						"1"
					]
				},
				"description": ""
			},
			"response": []
		},
		{
			"name": "attractions/<id> valid",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "674d1fb2-8829-4b17-8a9d-e8d4178174a9",
						"type": "text/javascript",
						"exec": [
							"function validate_nearby(near){",
							"    var validID = true;",
							"    var validRatings = true;",
							"    var validImages = true;",
							"    var validAddress = true;",
							"    var validNames = true;",
							"    for(let item of near){",
							"        validID = item.id >= 0 && validID;",
							"        validRatings = (item.rating > 0 && item.rating % 0.5 === 0) && validRatings;",
							"        validImages = item.image !== \"\" && validImages;",
							"        validAddress = item.address.length == 2 && (item.address[0] !== \"\" && item.address[1] !== \"\") && validAddress;",
							"        validNames = (item.name !== \"\") && validNames;",
							"    }",
							"    return validID && validImages && validRatings && validAddress && validNames;",
							"}",
							"",
							"function validate_reviews(list){",
							"    validReviews = true;",
							"    validReviews = list[0].text !== \"\" && list[0].link !== \"\" && validReviews;",
							"    validReviews = list[1].text !== \"\" && list[1].link !== \"\" && validReviews;",
							"    validReviews = list[2].text !== \"\" && list[2].link !== \"\" && validReviews;",
							"    ",
							"    return validReviews;",
							"}",
							"",
							"function validate_images(list){",
							"    validImages = true;",
							"    validImages = list[0] !== \"\" && validImages;",
							"    validImages = list[1] !== \"\" && validImages;",
							"    validImages = list[2] !== \"\" && validImages;",
							" ",
							"    return validImages;   ",
							"}",
							"",
							"tests[\"Status code is 200\"] = responseCode.code === 200;",
							"tests[\"Returns json\"] = postman.getResponseHeader(\"Content-Type\") === \"application/json\";",
							"",
							"var resp = JSON.parse(responseBody);",
							"var schema = {",
							"    \"$schema\": \"http://json-schema.org/draft-07/schema#\",",
							"    \"type\": \"object\",",
							"    \"properties\": {",
							"        \"attraction\": {",
							"        \"type\": \"object\",",
							"            \"properties\" : {",
							"                \"address\": {",
							"                    \"type\": \"array\",",
							"                    \"properties\": {",
							"                        \"type\": \"string\"",
							"                    }",
							"                },",
							"                \"categories\": {",
							"                    \"type\": \"array\",",
							"                    \"properties\": {",
							"                        \"type\": \"object\",",
							"                        \"properties\": {",
							"                            \"id\": {",
							"                                \"type\": \"string\"",
							"                            },",
							"                            \"name\": {",
							"                                \"type\": \"string\"",
							"                            }",
							"                        }",
							"                    }",
							"                },",
							"                ",
							"                \"id\": {",
							"                    \"type\": \"integer\"",
							"                },",
							"                \"images\": {",
							"                    \"type\": \"array\",",
							"                    \"properties\": {",
							"                        \"type\": \"string\"",
							"                    }",
							"                },",
							"                \"location\": {",
							"                    \"type\": \"object\",",
							"                    \"properties\": {",
							"                        \"lat\": {",
							"                            \"type\": \"number\"",
							"                        },",
							"                        \"long\": {",
							"                            \"type\": \"number\"",
							"                        }",
							"                    }",
							"                },",
							"                \"name\": {",
							"                    \"type\": \"string\"",
							"                },",
							"                \"phone\": {",
							"                    \"type\": \"string\"",
							"                },",
							"                \"rating\": {",
							"                    \"type\": \"number\"",
							"                },",
							"                \"reviews\": {",
							"                    \"type\": \"array\",",
							"                    \"items\": {",
							"                        \"type\": \"object\",",
							"                        \"properties\": {",
							"                            \"link\": {",
							"                                \"type\": \"string\"",
							"                            },",
							"                            \"text\": {",
							"                                \"type\": \"string\"",
							"                            }",
							"                        }",
							"                    }",
							"                }",
							"            },",
							"            \"additionalProperties\": false,",
							"            \"required\": [\"address\", \"categories\", \"id\", \"images\", \"location\", \"name\", \"phone\", \"rating\", \"reviews\"]",
							"        },",
							"        \"close_by_hotels\": {",
							"            \"type\": \"array\",",
							"            \"items\" : {",
							"                \"type\": \"object\",",
							"                \"properties\" : {",
							"                    \"address\": {",
							"                        \"type\": \"array\",",
							"                        \"properties\": {",
							"                            \"type\": \"string\"",
							"                        }",
							"                    },",
							"                    \"categories\": {",
							"                        \"type\": \"array\",",
							"                        \"properties\": {",
							"                            \"type\": \"object\",",
							"                            \"properties\": {",
							"                                \"id\": {",
							"                                    \"type\": \"string\"",
							"                                },",
							"                                \"name\": {",
							"                                    \"type\": \"string\"",
							"                                }",
							"                            }",
							"                        }",
							"                    },",
							"                    \"distance\": {",
							"                        \"type\": \"number\"",
							"                    },",
							"                    \"id\": {",
							"                        \"type\": \"integer\"",
							"                    },",
							"                    \"image\": {",
							"                        \"type\": \"string\"",
							"                    },",
							"                    \"name\": {",
							"                        \"type\": \"string\"",
							"                    },",
							"                    \"rating\": {",
							"                        \"type\": \"number\"",
							"                    },",
							"                    \"zip_code\": {",
							"                        \"type\": \"number\"",
							"                    }",
							"                },",
							"                \"additionalProperties\": false,",
							"                \"required\": [\"address\", \"categories\", \"id\", \"distance\", \"image\", \"name\", \"rating\", \"zip_code\"]",
							"            }",
							"        },",
							"        \"close_by_restaurants\": {",
							"            \"type\": \"array\",",
							"            \"items\" : {",
							"                \"type\": \"object\",",
							"                \"properties\" : {",
							"                    \"address\": {",
							"                        \"type\": \"array\",",
							"                        \"properties\": {",
							"                            \"type\": \"string\"",
							"                        }",
							"                    },",
							"                    \"categories\": {",
							"                        \"type\": \"array\",",
							"                        \"properties\": {",
							"                            \"type\": \"object\",",
							"                            \"properties\": {",
							"                                \"id\": {",
							"                                    \"type\": \"string\"",
							"                                },",
							"                                \"name\": {",
							"                                    \"type\": \"string\"",
							"                                }",
							"                            }",
							"                        }",
							"                    },",
							"                    \"distance\": {",
							"                        \"type\": \"number\"",
							"                    },",
							"                    \"id\": {",
							"                        \"type\": \"integer\"",
							"                    },",
							"                    \"image\": {",
							"                        \"type\": \"string\"",
							"                    },",
							"                    \"name\": {",
							"                        \"type\": \"string\"",
							"                    },",
							"                    \"rating\": {",
							"                        \"type\": \"number\"",
							"                    },",
							"                    \"zip_code\": {",
							"                        \"type\": \"number\"",
							"                    }",
							"                },",
							"                \"additionalProperties\": false,",
							"                \"required\": [\"address\", \"categories\", \"id\", \"distance\", \"image\", \"name\", \"rating\", \"zip_code\"]",
							"            }",
							"        }",
							"    }",
							"}",
							"",
							"tests[\"Valid schema\"] = tv4.validate(resp, schema);",
							"",
							"tests[\"4 Nearby Hotels\"] = resp.close_by_hotels.length == 4;",
							"tests[\"Hotels have valid information\"] = validate_nearby(resp.close_by_hotels);",
							"tests[\"4 Nearby Restaurants\"] = resp.close_by_restaurants.length == 4;",
							"tests[\"Restaurants have valid information\"] = validate_nearby(resp.close_by_restaurants);",
							"",
							"var item = resp.attraction;",
							"tests[\"Address is Valid\"] = item.address.length == 2 && (item.address[0] !== \"\" && item.address[1] !== \"\");",
							"tests[\"ID is valid\"] = item.id >= 0;",
							"tests[\"Rating is valid\"] = item.rating > 0 && item.rating % 0.5 === 0;",
							"tests[\"Images are Valid\"] = validate_images(item.images);",
							"tests[\"Name is valid\"] = item.name !== \"\";",
							"//tests[\"Phone Number is Valid\"] = item.phone !== \"\" && item.phone.length == 14;",
							"tests[\"Reviews are Valid\"] = item.reviews.length == 3 && validate_reviews(item.reviews);",
							"tests[\"Location is valid\"] = item.location.lat >= -90.0 && item.location.lat <= 90.0 && item.location.long >= -180.0 && item.location.long <= 180.0; "
						]
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"body": {},
				"url": {
					"raw": "http://api.tacoboutaustin.me/attractions/1",
					"protocol": "http",
					"host": [
						"api",
						"tacoboutaustin",
						"me"
					],
					"path": [
						"attractions",
						"1"
					]
				},
				"description": ""
			},
			"response": []
		},
		{
			"name": "hotels/<id> valid",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "f06d2adb-f5cf-435f-9e4e-480fc206ba61",
						"type": "text/javascript",
						"exec": [
							"function validate_nearby(near){",
							"    var validID = true;",
							"    var validRatings = true;",
							"    var validImages = true;",
							"    var validAddress = true;",
							"    var validNames = true;",
							"    for(let item of near){",
							"        validID = item.id >= 0 && validID;",
							"        validRatings = (item.rating > 0 && item.rating % 0.5 === 0) && validRatings;",
							"        validImages = item.image !== \"\" && validImages;",
							"        validAddress = item.address.length == 2 && (item.address[0] !== \"\" && item.address[1] !== \"\") && validAddress;",
							"        validNames = (item.name !== \"\") && validNames;",
							"    }",
							"    return validID && validImages && validRatings && validAddress && validNames;",
							"}",
							"",
							"function validate_reviews(list){",
							"    validReviews = true;",
							"    validReviews = list[0].text !== \"\" && list[0].link !== \"\" && validReviews;",
							"    validReviews = list[1].text !== \"\" && list[1].link !== \"\" && validReviews;",
							"    validReviews = list[2].text !== \"\" && list[2].link !== \"\" && validReviews;",
							"    ",
							"    return validReviews;",
							"}",
							"",
							"function validate_images(list){",
							"    validImages = true;",
							"    validImages = list[0] !== \"\" && validImages;",
							"    validImages = list[1] !== \"\" && validImages;",
							"    validImages = list[2] !== \"\" && validImages;",
							" ",
							"    return validImages;   ",
							"}",
							"",
							"tests[\"Status code is 200\"] = responseCode.code === 200;",
							"tests[\"Returns json\"] = postman.getResponseHeader(\"Content-Type\") === \"application/json\";",
							"",
							"var resp = JSON.parse(responseBody);",
							"var schema = {",
							"    \"$schema\": \"http://json-schema.org/draft-07/schema#\",",
							"    \"type\": \"object\",",
							"    \"properties\": {",
							"        \"close_by_attractions\": {",
							"            \"type\": \"array\",",
							"            \"items\" : {",
							"                \"type\": \"object\",",
							"                \"properties\" : {",
							"                    \"address\": {",
							"                        \"type\": \"array\",",
							"                        \"properties\": {",
							"                            \"type\": \"string\"",
							"                        }",
							"                    },",
							"                    \"categories\": {",
							"                        \"type\": \"array\",",
							"                        \"properties\": {",
							"                            \"type\": \"object\",",
							"                            \"properties\": {",
							"                                \"id\": {",
							"                                    \"type\": \"string\"",
							"                                },",
							"                                \"name\": {",
							"                                    \"type\": \"string\"",
							"                                }",
							"                            }",
							"                        }",
							"                    },",
							"                    \"distance\": {",
							"                        \"type\": \"number\"",
							"                    },",
							"                    \"id\": {",
							"                        \"type\": \"integer\"",
							"                    },",
							"                    \"image\": {",
							"                        \"type\": \"string\"",
							"                    },",
							"                    \"name\": {",
							"                        \"type\": \"string\"",
							"                    },",
							"                    \"rating\": {",
							"                        \"type\": \"number\"",
							"                    },",
							"                    \"zip_code\": {",
							"                        \"type\": \"number\"",
							"                    }",
							"                },",
							"                \"additionalProperties\": false,",
							"                \"required\": [\"address\", \"categories\", \"id\", \"distance\", \"image\", \"name\", \"rating\", \"zip_code\"]",
							"            }",
							"        },",
							"        \"close_by_restaurants\": {",
							"            \"type\": \"array\",",
							"            \"items\" : {",
							"                \"type\": \"object\",",
							"                \"properties\" : {",
							"                    \"address\": {",
							"                        \"type\": \"array\",",
							"                        \"properties\": {",
							"                            \"type\": \"string\"",
							"                        }",
							"                    },",
							"                    \"categories\": {",
							"                        \"type\": \"array\",",
							"                        \"properties\": {",
							"                            \"type\": \"object\",",
							"                            \"properties\": {",
							"                                \"id\": {",
							"                                    \"type\": \"string\"",
							"                                },",
							"                                \"name\": {",
							"                                    \"type\": \"string\"",
							"                                }",
							"                            }",
							"                        }",
							"                    },",
							"                    \"distance\": {",
							"                        \"type\": \"number\"",
							"                    },",
							"                    \"id\": {",
							"                        \"type\": \"integer\"",
							"                    },",
							"                    \"image\": {",
							"                        \"type\": \"string\"",
							"                    },",
							"                    \"name\": {",
							"                        \"type\": \"string\"",
							"                    },",
							"                    \"rating\": {",
							"                        \"type\": \"number\"",
							"                    },",
							"                    \"zip_code\": {",
							"                        \"type\": \"number\"",
							"                    }",
							"                },",
							"                \"additionalProperties\": false,",
							"                \"required\": [\"address\", \"categories\", \"id\", \"distance\", \"image\", \"name\", \"rating\", \"zip_code\"]",
							"            }",
							"        },",
							"        \"hotel\": {",
							"        \"type\": \"object\",",
							"            \"properties\" : {",
							"                \"address\": {",
							"                    \"type\": \"array\",",
							"                    \"properties\": {",
							"                        \"type\": \"string\"",
							"                    }",
							"                },",
							"                \"categories\": {",
							"                    \"type\": \"array\",",
							"                    \"properties\": {",
							"                        \"type\": \"object\",",
							"                        \"properties\": {",
							"                            \"id\": {",
							"                                \"type\": \"string\"",
							"                            },",
							"                            \"name\": {",
							"                                \"type\": \"string\"",
							"                            }",
							"                        }",
							"                    }",
							"                },",
							"                \"id\": {",
							"                    \"type\": \"integer\"",
							"                },",
							"                \"images\": {",
							"                    \"type\": \"array\",",
							"                    \"properties\": {",
							"                        \"type\": \"string\"",
							"                    }",
							"                },",
							"                \"location\": {",
							"                    \"type\": \"object\",",
							"                    \"properties\": {",
							"                        \"lat\": {",
							"                            \"type\": \"number\"",
							"                        },",
							"                        \"long\": {",
							"                            \"type\": \"number\"",
							"                        }",
							"                    }",
							"                },",
							"                \"name\": {",
							"                    \"type\": \"string\"",
							"                },",
							"                \"phone\": {",
							"                    \"type\": \"string\"",
							"                },",
							"                \"rating\": {",
							"                    \"type\": \"number\"",
							"                },",
							"                \"reviews\": {",
							"                    \"type\": \"array\",",
							"                    \"items\": {",
							"                        \"type\": \"object\",",
							"                        \"properties\": {",
							"                            \"link\": {",
							"                                \"type\": \"string\"",
							"                            },",
							"                            \"text\": {",
							"                                \"type\": \"string\"",
							"                            }",
							"                        }",
							"                    }",
							"                }",
							"            },",
							"            \"additionalProperties\": false,",
							"            \"required\": [\"address\", \"categories\", \"id\", \"images\", \"location\", \"name\", \"phone\", \"rating\", \"reviews\"]",
							"        }",
							"    }",
							"}",
							"",
							"tests[\"Valid schema\"] = tv4.validate(resp, schema);",
							"console.log(tv4.error)",
							"",
							"tests[\"4 Nearby Attractions\"] = resp.close_by_attractions.length == 4;",
							"tests[\"Attractions have valid information\"] = validate_nearby(resp.close_by_attractions);",
							"tests[\"4 Nearby Restaurants\"] = resp.close_by_restaurants.length == 4;",
							"tests[\"Restaurants have valid information\"] = validate_nearby(resp.close_by_restaurants);",
							"",
							"var item = resp.hotel;",
							"tests[\"Address is Valid\"] = item.address.length == 2 && (item.address[0] !== \"\" && item.address[1] !== \"\");",
							"tests[\"ID is valid\"] = item.id >= 0;",
							"tests[\"Rating is valid\"] = item.rating > 0 && item.rating % 0.5 === 0;",
							"tests[\"Images are Valid\"] = validate_images(item.images);",
							"tests[\"Name is valid\"] = item.name !== \"\";",
							"tests[\"Phone Number is Valid\"] = item.phone !== \"\" && item.phone.length == 14;",
							"tests[\"Reviews are Valid\"] = item.reviews.length == 3 && validate_reviews(item.reviews);",
							"tests[\"Location is valid\"] = item.location.lat >= -90.0 && item.location.lat <= 90.0 && item.location.long >= -180.0 && item.location.long <= 180.0; "
						]
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"body": {},
				"url": {
					"raw": "http://api.tacoboutaustin.me/hotels/1",
					"protocol": "http",
					"host": [
						"api",
						"tacoboutaustin",
						"me"
					],
					"path": [
						"hotels",
						"1"
					]
				},
				"description": ""
			},
			"response": []
		},
		{
			"name": "restaurants/<id> invalid",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "8fdefcd4-cc1a-4cc8-887c-7e378163fee6",
						"type": "text/javascript",
						"exec": [
							"tests[\"Invalid ID Response fails\"] = responseCode.code === 404;"
						]
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"body": {},
				"url": {
					"raw": "http://api.tacoboutaustin.me/restaurants/500",
					"protocol": "http",
					"host": [
						"api",
						"tacoboutaustin",
						"me"
					],
					"path": [
						"restaurants",
						"500"
					]
				},
				"description": ""
			},
			"response": []
		},
		{
			"name": "restaurants/<id> invalid 2",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "04bac233-d510-4296-890e-be6592420ee3",
						"type": "text/javascript",
						"exec": [
							"tests[\"Invalid ID Response fails\"] = responseCode.code === 404;"
						]
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"body": {},
				"url": {
					"raw": "http://api.tacoboutaustin.me/restaurants/kladfjlk;asdkfj",
					"protocol": "http",
					"host": [
						"api",
						"tacoboutaustin",
						"me"
					],
					"path": [
						"restaurants",
						"kladfjlk;asdkfj"
					]
				},
				"description": ""
			},
			"response": []
		},
		{
			"name": "attractions/<id> invalid",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "ac33298f-1f82-46e8-b108-31992520a2db",
						"type": "text/javascript",
						"exec": [
							"tests[\"Invalid ID Response fails\"] = responseCode.code === 404;"
						]
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"body": {},
				"url": {
					"raw": "http://api.tacoboutaustin.me/attractions/500",
					"protocol": "http",
					"host": [
						"api",
						"tacoboutaustin",
						"me"
					],
					"path": [
						"attractions",
						"500"
					]
				},
				"description": ""
			},
			"response": []
		},
		{
			"name": "attractions/<id> invalid 2",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "8a1e936d-1a51-4139-8012-0e69e9105006",
						"type": "text/javascript",
						"exec": [
							"tests[\"Invalid ID Response fails\"] = responseCode.code === 404;",
							""
						]
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"body": {},
				"url": {
					"raw": "http://api.tacoboutaustin.me/attractions/ldfhkldfhklasdhfilah",
					"protocol": "http",
					"host": [
						"api",
						"tacoboutaustin",
						"me"
					],
					"path": [
						"attractions",
						"ldfhkldfhklasdhfilah"
					]
				},
				"description": ""
			},
			"response": []
		},
		{
			"name": "hotels/<id> invalid",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "fc22e1d7-aa39-4be7-b09f-bc4bfe0b2e3a",
						"type": "text/javascript",
						"exec": [
							"tests[\"Invalid ID Response fails\"] = responseCode.code === 404;",
							""
						]
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"body": {},
				"url": {
					"raw": "http://api.tacoboutaustin.me/hotels/500",
					"protocol": "http",
					"host": [
						"api",
						"tacoboutaustin",
						"me"
					],
					"path": [
						"hotels",
						"500"
					]
				},
				"description": ""
			},
			"response": []
		},
		{
			"name": "hotels/<id> invalid 2",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "fc22e1d7-aa39-4be7-b09f-bc4bfe0b2e3a",
						"type": "text/javascript",
						"exec": [
							"tests[\"Invalid ID Response fails\"] = responseCode.code === 404;",
							""
						]
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"body": {},
				"url": {
					"raw": "http://api.tacoboutaustin.me/hotels/adfkjadfkljahfkjfdah",
					"protocol": "http",
					"host": [
						"api",
						"tacoboutaustin",
						"me"
					],
					"path": [
						"hotels",
						"adfkjadfkljahfkjfdah"
					]
				},
				"description": ""
			},
			"response": []
		}
	]
}